{
    "openapi": "3.0.0",
    "info": {
        "title": "gaming product management with REST API",
        "description": "a scalable and flexible system for managing a store of gaming product .",
        "contact": {
            "email": "ahmed.yassin.elhamzaoui2019@gmail.com"
        },
        "license": {
            "name": "made by Ahmed Yassine El Hamzaoui",
            "url": "https://github.com/ahmedyassineelhamzaoui"
        },
        "version": "1.0.0",
        "x-logo": {
            "url": "https://via.placeholder.com/190x90.png?text=L5-Swagger"
        }
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "create a new user",
                "description": "create a new user using the reqiuerd information name,email,password",
                "operationId": "30797183e225c26ac284372d6fca8e8d",
                "requestBody": {
                    "description": "User information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "the guest name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "the guest email address",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "the guest password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "account created successfuly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "the response status",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "the message of the response",
                                            "type": "string",
                                            "example": "account has benn created successfuly"
                                        },
                                        "user": {
                                            "description": "the information of the user who create her account",
                                            "type": "object"
                                        },
                                        "Authorization": {
                                            "description": "the token of the new user",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate a user",
                "description": "Authenticate a user with their email and password",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "The user's email address",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "The user's password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User authenticated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "description": "The authenticated user object",
                                            "type": "object"
                                        },
                                        "Authorization": {
                                            "description": "The authorization token",
                                            "properties": {
                                                "token": {
                                                    "description": "The authorization token value",
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "The authorization token type",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "the given data is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "A message describing the validation error",
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "description": "An object containing validation error messages",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "logout method",
                "description": "logout the session of the curent conect user",
                "operationId": "3f19b742e4ead13f81ba0d6c0d46ac1b",
                "responses": {
                    "200": {
                        "description": "successfuly log out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "the status of the response",
                                            "type": "string",
                                            "example": "the status of the response"
                                        },
                                        "success": {
                                            "description": "logout successsfuly",
                                            "type": "string",
                                            "example": "logout successsfuly"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/add-categorie": {
            "post": {
                "tags": [
                    "Categorie"
                ],
                "summary": "Add a new category",
                "description": "Adds a new category with the given name",
                "operationId": "7f923bf74b0777fba73be68c281103a6",
                "requestBody": {
                    "description": "The category information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully"
                                        },
                                        "Categorie": {}
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Category already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category already exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/delete-categorie": {
            "delete": {
                "tags": [
                    "Categorie"
                ],
                "summary": "Delete a categorie",
                "description": "Deletes a specific categorie based on its ID",
                "operationId": "581a85e375b0529535ae48ac2b1ce341",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the categorie to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categorie deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "The message to be returned",
                                            "type": "string",
                                            "example": "Categorie deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Categorie not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "description": "The message to be returned",
                                            "type": "string",
                                            "example": "Categorie not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/update-categorie": {
            "put": {
                "tags": [
                    "Categorie"
                ],
                "summary": "Update a categorie",
                "description": "Updates a specific categorie based on its ID",
                "operationId": "77810c8c97e0630a2b85ce7294d6c7b3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of the categorie to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the categorie",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categorie updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "The message to be returned",
                                            "type": "string",
                                            "example": "categorie updated successfully"
                                        },
                                        "categorie": {
                                            "description": "The updated categorie object",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Categorie not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "description": "The message to be returned",
                                            "type": "string",
                                            "example": "categorie not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categorie"
                ],
                "summary": "Get all categories",
                "description": "Returns a list of all categories",
                "operationId": "6762fab0195ef6e737412420c7203c7d",
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "categories": {
                                            "description": "The list of categories",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "The ID of the category",
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "name": {
                                                        "description": "The name of the category",
                                                        "type": "string",
                                                        "example": "Category 1"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No categories available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "The message to be returned",
                                            "type": "string",
                                            "example": "No categories available"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/add-product": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Add a new product",
                "description": "Adds a new product with the given details",
                "operationId": "76121ec334829c1da1ef6b8205c509b1",
                "requestBody": {
                    "description": "The product information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "price",
                                    "categorie_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 200
                                    },
                                    "description": {
                                        "type": "string",
                                        "minLength": 10
                                    },
                                    "price": {
                                        "type": "number"
                                    },
                                    "categorie_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product created successfully"
                                        },
                                        "product": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "title": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "price": {
                                                    "type": "number"
                                                },
                                                "categorie_id": {
                                                    "type": "integer"
                                                },
                                                "user_id": {
                                                    "type": "integer"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Product already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "This title of product already exists. Please enter another one."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/update-product": {
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Update a product",
                "description": "Updates a specific product based on its ID",
                "operationId": "c3f881009b52dee85956f74770f0734f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of the product to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "The title of the product",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 200
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "The description of the product",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 10
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "The price of the product",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "categorie_id",
                        "in": "query",
                        "description": "The ID of the category to which the product belongs",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "The message to be returned",
                                            "type": "string",
                                            "example": "product has been updated successfully"
                                        },
                                        "product": {
                                            "description": "The updated product object",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "description": "The message to be returned",
                                            "type": "string",
                                            "example": "this id doesn't exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/delete-product": {
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete a product",
                "description": "Deletes a specific product based on its ID",
                "operationId": "00a007c20cf0f2856c8cba8b7a01e3fd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of the product to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "The message to be returned",
                                            "type": "string",
                                            "example": "product deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "description": "The message to be returned",
                                            "type": "string",
                                            "example": "the id that you enter not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get all products",
                "description": "Returns all products in the system",
                "operationId": "9e289d6b0d7637b34630d235f1cea155",
                "responses": {
                    "200": {
                        "description": "A list of products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "The list of products",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "The ID of the product",
                                                        "type": "integer"
                                                    },
                                                    "title": {
                                                        "description": "The title of the product",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "The description of the product",
                                                        "type": "string"
                                                    },
                                                    "price": {
                                                        "description": "The price of the product",
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "categorie_id": {
                                                        "description": "The ID of the category to which the product belongs",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No products found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "The error message",
                                            "type": "string",
                                            "example": "No products found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reset-pasword": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "forgot passwword",
                "description": "method that allows user who has an account to reset his password",
                "operationId": "9c2d8d3e99e31f9071be42b08d10f127",
                "requestBody": {
                    "description": "User email",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "email of user",
                                        "type": "string",
                                        "example": "enter your email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "email reset was send successfuly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "the status of the response",
                                            "example": "the staus of the response"
                                        },
                                        "message": {
                                            "description": "token that need to reset your password",
                                            "properties": {
                                                "token": {
                                                    "description": "the token of user",
                                                    "type": "string",
                                                    "example": "the token of user"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "the email dosn't exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "status of response",
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "description": "the email dosn't exist in database",
                                            "type": "string",
                                            "example": "the email dosn't exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/changePassword": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "change password ",
                "description": "change the password of the user",
                "operationId": "c74a6833e836dc51c3133a86fb0a586e",
                "requestBody": {
                    "description": "user information to change his password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pasword": {
                                        "description": "the new password",
                                        "type": "string",
                                        "example": "enter your new password"
                                    },
                                    "confirm password": {
                                        "description": "the confirmation of password",
                                        "type": "string",
                                        "example": "confirm your password"
                                    },
                                    "token": {
                                        "description": "the token to reset the password ",
                                        "type": "string",
                                        "example": "enter the token that was in your email address"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "password changed successfuly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "A message describing the response status",
                                            "type": "string",
                                            "example": "Password has been changed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowd"
                    },
                    "422": {
                        "description": "validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "the status response",
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "description": "An object containing validation error messages",
                                            "type": "string",
                                            "example": "validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/deleteProfile": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete the conected user",
                "description": "Delete the authenticated user",
                "operationId": "c6fa876c04f7bf4be3469878a440baea",
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "A message describing the response status",
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/updateProfile": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user information",
                "description": "Update the authenticated user's information",
                "operationId": "ef7cf907e95fa949db10212eca527dcd",
                "requestBody": {
                    "description": "The updated user information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "The user's new name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "The user's new email address",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "The user's new password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "A message describing the response status",
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "user": {
                                            "description": "The updated user object",
                                            "properties": {
                                                "id": {
                                                    "description": "The user's ID",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "description": "The user's name",
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "description": "The user's email address",
                                                    "type": "string",
                                                    "example": "example@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "A message describing the validation error",
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "description": "An object containing validation error messages",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "all users",
                "description": "method to return all users",
                "operationId": "32f813ea7a22e2b8b862ef93084426b9",
                "responses": {
                    "200": {
                        "description": "the response of success ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "the response of your request",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "users": {
                                            "description": "all users",
                                            "properties": {
                                                "id": {
                                                    "description": "id of user",
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "description": "the user name",
                                                    "type": "string",
                                                    "example": "mohamed"
                                                },
                                                "email": {
                                                    "description": "the user email",
                                                    "type": "string",
                                                    "example": "mohamed@gmail.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/edit-user": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user information",
                "description": "Update a user's name, email, and/or password",
                "operationId": "863e508776b73cf3968d4e3513aacca0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The new name of the user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The new email of the user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The new password of the user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "A message indicating the result of the update",
                                            "type": "string",
                                            "example": "User has been updated successfully"
                                        },
                                        "user": {
                                            "description": "The updated user object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "description": "A message indicating that the user was not found",
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/delete-user": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "description": "Deletes a specific user based on their ID",
                "operationId": "218dac502890f16b1fbd32f481888ab9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "The message to be returned",
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "description": "The message to be returned",
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}