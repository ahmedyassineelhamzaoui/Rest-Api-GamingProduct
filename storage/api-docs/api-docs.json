{
    "openapi": "3.0.0",
    "info": {
        "title": "gaming product management with REST API",
        "description": "a scalable and flexible system for managing a store of gaming product .",
        "contact": {
            "email": "ahmed.yassin.elhamzaoui2019@gmail.com"
        },
        "license": {
            "name": "made by Ahmed Yassine El Hamzaoui",
            "url": "https://github.com/ahmedyassineelhamzaoui"
        },
        "version": "1.0.0",
        "x-logo": {
            "url": "https://via.placeholder.com/190x90.png?text=L5-Swagger"
        }
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "create a new user",
                "description": "create a new user using the reqiuerd information name,email,password",
                "operationId": "30797183e225c26ac284372d6fca8e8d",
                "requestBody": {
                    "description": "User information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "the guest name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "the guest email address",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "the guest password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "account created successfuly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "the response status",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "the message of the response",
                                            "type": "string",
                                            "example": "account has benn created successfuly"
                                        },
                                        "user": {
                                            "description": "the information of the user who create her account",
                                            "type": "object"
                                        },
                                        "Authorization": {
                                            "description": "the token of the new user",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate a user",
                "description": "Authenticate a user with their email and password",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "The user's email address",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "The user's password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User authenticated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "description": "The authenticated user object",
                                            "type": "object"
                                        },
                                        "Authorization": {
                                            "description": "The authorization token",
                                            "properties": {
                                                "token": {
                                                    "description": "The authorization token value",
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "The authorization token type",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "the given data is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "A message describing the validation error",
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "description": "An object containing validation error messages",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "logout method",
                "description": "logout the session of the curent conect user",
                "operationId": "3f19b742e4ead13f81ba0d6c0d46ac1b",
                "responses": {
                    "200": {
                        "description": "successfuly log out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "the status of the response",
                                            "type": "string",
                                            "example": "the status of the response"
                                        },
                                        "success": {
                                            "description": "logout successsfuly",
                                            "type": "string",
                                            "example": "logout successsfuly"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reset-pasword": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "forgot passwword",
                "description": "method that allows user who has an account to reset his password",
                "operationId": "9c2d8d3e99e31f9071be42b08d10f127",
                "requestBody": {
                    "description": "User email",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "email of user",
                                        "type": "string",
                                        "example": "enter your email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "email reset was send successfuly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "the status of the response",
                                            "example": "the staus of the response"
                                        },
                                        "message": {
                                            "description": "token that need to reset your password",
                                            "properties": {
                                                "token": {
                                                    "description": "the token of user",
                                                    "type": "string",
                                                    "example": "the token of user"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "the email dosn't exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "status of response",
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "description": "the email dosn't exist in database",
                                            "type": "string",
                                            "example": "the email dosn't exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}